{
  "ver": "1.0.15",
  "uuid": "fc2d038f-c2d6-420a-a6e5-5de5097698c9",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\n  precision highp float;\r  \r  uniform mat4 cc_matViewProj;\r  uniform vec2 texSize;\r  uniform vec2 u_resolution;\r  \r  attribute vec3 a_position;\r  attribute vec2 a_uv0;\r  varying vec2 uv0;\r  varying vec2 v_texCoord;\r  void main() {\r    vec4 pos = cc_matViewProj * vec4(a_position, 1);\r    gl_Position = pos;\r    uv0 = a_uv0;\r    v_texCoord = a_uv0.xy * texSize;\r  }\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\n  \r  \r  \r  #if COCOS_SHADER\r  precision highp float;\r  \r  \r  \r  #define iChannel0 texture\r  #define iTime u_time\r  #define iMouse u_mouse\r  #define iResolution u_resolution\r  \r  uniform vec2 u_mouse;\r  uniform vec2 u_resolution;\r  uniform float u_time;\r  \r  uniform sampler2D texture;\r  uniform vec2 texSize;\r  varying vec2 uv0;\r  varying vec2 v_texCoord;\r  #endif\r  #if USE_TEXTURE\r  #endif\r  \r  \r  const float tau = 6.28318530717958647692;\r  \r  \r  #define GAMMA (2.2)\r  \r  vec3 ToLinear( in vec3 col )\r  {\r  \t\r  \treturn pow( col, vec3(GAMMA) );\r  }\r  \r  vec3 ToGamma( in vec3 col )\r  {\r  \t\r  \treturn pow( col, vec3(1.0/GAMMA) );\r  }\r  \r  vec4 Noise( in ivec2 x )\r  {\r  \treturn texture2D( iChannel0, fract((vec2(x)+0.5)/256.0), -100.0 );\r  }\r  \r  vec4 Rand( in int x )\r  {\r  \tvec2 uv;\r  \tuv.x = (float(x)+0.5)/256.0;\r  \tuv.y = (floor(uv.x)+0.5)/256.0;\r  \treturn texture2D( iChannel0, fract(uv), -100.0 );\r  }\r  \r  \r  void mainImage( out vec4 fragColor, in vec2 fragCoord )\r  {\r  \tvec3 ray;\r  \tray.xy = 2.0*(fragCoord.xy-iResolution.xy*.5)/iResolution.x;\r  \tray.z = 1.0;\r  \r  \tfloat offset = iTime*.5;\t\r  \tfloat speed2 = (cos(offset)+1.0)*2.0;\r  \tfloat speed = speed2+.1;\r  \toffset += sin(offset)*.96;\r  \toffset *= 2.0;\r  \t\r  \t\r  \tvec3 col = vec3(0);\r  \t\r  \tvec3 stp = ray/max(abs(ray.x),abs(ray.y));\r  \t\r  \tvec3 pos = 2.0*stp+.5;\r  \tfor ( int i=0; i < 20; i++ )\r  \t{\r  \t\tfloat z = Noise(ivec2(pos.xy)).x;\r  \t\tz = fract(z-offset);\r  \t\tfloat d = 50.0*z-pos.z;\r  \t\tfloat w = pow(max(0.0,1.0-8.0*length(fract(pos.xy)-.5)),2.0);\r  \t\tvec3 c = max(vec3(0),vec3(1.0-abs(d+speed2*.5)/speed,1.0-abs(d)/speed,1.0-abs(d-speed2*.5)/speed));\r  \t\tcol += 1.5*(1.0-z)*c*w;\r  \t\tpos += stp;\r  \t}\r  \t\r  \tfragColor = vec4(ToGamma(col),1.0);\r  }\r  \r  \r  #if COCOS_SHADER\r  void main(){\r      mainImage(gl_FragColor, v_texCoord);\r  }\r  #endif\r  \n\n\n"
    }
  ],
  "subMetas": {}
}